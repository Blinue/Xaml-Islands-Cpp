<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <DefaultLanguage>en-US</DefaultLanguage>
    <CppWinRTFastAbi>true</CppWinRTFastAbi>
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <CppWinRTVerbosity>low</CppWinRTVerbosity>
    <IntDir>$(SolutionDir)obj\$(Platform)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
    <GeneratedFilesDir>$(IntDir)Generated Files\</GeneratedFilesDir>
    <IsPackaged>$(Configuration.EndsWith('Packaged'))</IsPackaged>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <PreprocessorDefinitions>_WINDOWS;WIN32_LEAN_AND_MEAN;WINRT_LEAN_AND_MEAN;WINRT_NO_MODULE_LOCK;NOMINMAX;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <WarningLevel>Level4</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalOptions>/bigobj /utf-8 /fp:contract /Zc:__cplusplus /volatile:iso %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>

  <!-- HybridCRT -->
  <Import Project="$(MSBuildThisFileDirectory)HybridCRT.props" />

  <Target Name="MakeWinMDReferencesNonPrivateAndRemoveWebView2" BeforeTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <!-- 从包中删除依赖项的 winmd 和 pri -->
      <_TemporaryReferences Include="@(Reference)" Condition="'%(Extension)' == '.winmd' And '%(Reference.Private)' == ''" />
      <Reference Remove="@(_TemporaryReferences)" />
      <Reference Include="@(_TemporaryReferences)">
        <Private>false</Private>
      </Reference>
      <!-- 从包中删除 WebView2 相关文件 -->
      <_WebView2Reference Include="@(Reference)" Condition="'%(Filename)' == 'Microsoft.Web.WebView2.Core'" />
      <Reference Remove="@(_WebView2Reference)" />
      <Reference Include="@(_WebView2Reference)" RemoveMetadata="Implementation" />
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="'%(Filename)' == 'Microsoft.Web.WebView2.Core'" />
    </ItemGroup>
  </Target>
  
  <!-- 编译为非打包应用时修正正式版 WinUI 引用的 dll 和 pri -->
  <Target Name="FixWinUIReference" Condition="!$(IsPackaged)" AfterTargets="ResolveAssemblyReferences">
    <!-- 正式版 WinUI 打包为 AppX，从中提取出 dll 和 pri，预发行版则不做任何操作 -->
    <Exec Command="python $(MSBuildThisFileDirectory)extract_winui_runtime.py $(Platform)" />
    
    <ItemGroup Condition="Exists('$(SolutionDir)obj\$(Platform)\WinUI\version.txt')">
      <!-- 为 winmd 添加 Implementation 为提取出的 dll -->
      <_WinUIWinmdReference Include="@(ReferencePath)" Condition="'%(Filename)%(Extension)' == 'Microsoft.UI.Xaml.winmd'" />
      <ReferencePath Remove="@(_WinUIWinmdReference)" />
      <ReferencePath Include="@(_WinUIWinmdReference)">
        <Implementation>$(SolutionDir)obj\$(Platform)\WinUI\Microsoft.UI.Xaml.dll</Implementation>
      </ReferencePath>
      <ReferenceCopyLocalPaths Include="$(SolutionDir)obj\$(Platform)\WinUI\Microsoft.UI.Xaml.dll" />
      
      <!-- 正式版包中 winmd 引用着错误的 pri，改为引用提取出的 pri -->
      <WinUIPriReference Include="@(_ReferenceRelatedPaths)" Condition="'%(Filename)%(Extension)' == 'Microsoft.UI.Xaml.pri'" />
      <_ReferenceRelatedPaths Remove="@(WinUIPriReference)" />
      <!-- 把元数据复制过来，我们只想改变 pri 路径 -->
      <_ReferenceRelatedPaths Include="$(SolutionDir)obj\$(Platform)\WinUI\Microsoft.UI.Xaml.pri">
        <CopyLocal>%(WinUIPriReference.CopyLocal)</CopyLocal>
        <CopyLocalSatelliteAssemblies>%(WinUIPriReference.CopyLocalSatelliteAssemblies)</CopyLocalSatelliteAssemblies>
        <Implicit>%(WinUIPriReference.Implicit)</Implicit>
        <OriginalItemSpec>%(WinUIPriReference.OriginalItemSpec)</OriginalItemSpec>
        <Private>%(WinUIPriReference.Private)</Private>
        <ReferenceOutputAssembly>%(WinUIPriReference.ReferenceOutputAssembly)</ReferenceOutputAssembly>
        <ResolvedFrom>%(WinUIPriReference.ResolvedFrom)</ResolvedFrom>
        <Version>%(WinUIPriReference.Version)</Version>
      </_ReferenceRelatedPaths>
    </ItemGroup>
  </Target>

  <!-- 从包中删除 WinUI 引入的噪音图片，这张图片用于 AcrylicBrush，可以安全删除 -->
  <Target Name="RemoveWinUIAssets" Condition="!$(IsPackaged)" AfterTargets="AddPriPayloadFilesToCopyToOutputDirectoryItems">
    <ItemGroup>
      <_AllChildProjectItemsWithTargetPath Remove="@(_AllChildProjectItemsWithTargetPath)" Condition="$([System.String]::new('%(TargetPath)').StartsWith('Microsoft.UI.Xaml'))" />
    </ItemGroup>
  </Target>
</Project>
